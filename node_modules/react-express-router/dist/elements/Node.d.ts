import { DiscriminateComponentProps, ComponentsProps, Elements } from "../types";
declare abstract class INode<T extends Elements = any> {
    type: Elements;
    props: DiscriminateComponentProps<T>;
    protected childs: INode[];
    constructor(type: Elements, props: DiscriminateComponentProps<T>);
    appendChild(child: INode): void;
    insertBefore(child: INode, beforeChild: INode): void;
    removeChild(child: INode): void;
    update(oldProps: DiscriminateComponentProps<T>, newProps: DiscriminateComponentProps<T>): void;
    abstract render(): ComponentsProps;
}
export default INode;
